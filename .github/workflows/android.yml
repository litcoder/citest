name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ADB: "${ANDROID_HOME}/platform-tools/adb"
  CMDLINE_TOOLS: "${ANDROID_HOME}/cmdline-tools/latest/bin/"
  EMULATOR: "${ANDROID_HOME}/emulator/emulator"
  AVD_CONFIG: "system-images;android-34;google_apis;x86_64"
  AVD_NAME: "Pixel_C_API_34"

jobs:
  unittest-apk:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Build APK with gradle
      run: sh ./gradlew assemble

    - name: Lint
      run: sh ./gradlew lint

    - name: Setup an emulator
      run: |
        # Install Android images.
        echo y | \
          ${{ env.CMDLINE_TOOLS }}/sdkmanager \
          ${{ env.AVD_CONFIG }}

        # Create an AVD
        echo n | \
          ${{ env.CMDLINE_TOOLS }}/avdmanager -v \
          create avd -n ${{ env.AVD_NAME }} \
          -k ${{ env.AVD_CONFIG }}

        # Check if AVD's created okay
        ${{ env.CMDLINE_TOOLS }}/avdmanager list avd

    - name: Run instrumentation test
      run: |
        # Launch AVD with CPU acceleration turned off
        # since GitHub runners doesn't allow /dev/kvm perm.
        ${{ env.EMULATOR }} -avd ${{ env.AVD_NAME }} \
          -no-window -no-snapshot -no-audio -no-boot-anim -accel off -verbose&

        # Run the on-device tests.
        ${{ env.ADB }} wait-for-device && \
        sh ./gradlew connectedCheck


